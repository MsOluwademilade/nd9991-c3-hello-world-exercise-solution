version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@2.0.3
# Define the jobs we want to run for this project

commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          when: on_fail
          command:  |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID):0:5}

jobs:
  create_infrastructure:  
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout # check out the code in the project directory
      - run: 
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1

  #configure_infrastructure: 
   # docker:
    #  - image: python:3.7-alpine3.11
    #steps:
     # - checkout
      #- add_ssh_keys:
              # You can get this ID in the section where you registered the SSH Key
       #       fingerprints: ["d4:31:32:9a:3a:7a:4e:45:b7:6b:9e:3e:31:04:34:ff"] 
      #- run:
       #   name: Install dependencies
        #  command: |
         #   apk add --update ansible
      #- run:
       #   name: Configure server
        #  command: |
         #   ansible-playbook -i inventory.txt main4.yml 

  #smoke_test:
   # docker:
    #  - image: alpine:latest
    #steps: 
     # - run: apk add --update curl
      #- run:
       #   name: smoke test
        #  command: |
         #   URL="https://blog.udacity.com/"
          #  if curl -s --head ${URL}
           # then 
            #  return 0
            #else
             # return 1
            #fi

  #smoke_test:
   # docker:
    #  - image: alpine:latest
    #steps:
     # - run:
      #    name: Test job
       #   # Fail the job intentionally to simulate an error.
        #  command:  return 1
      #- destroy_environment  

  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Execute bucket.yml - Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
            --template-file bucket.yml \
            --stack-name stack-create-bucket-${CIRCLE_WORKFLOW_ID:0:7} \
            --parameter-overrides MyBucketName="mybucket-${CIRCLE_WORKFLOW_ID:0:7}"
      # Uncomment the step below if yoou wish to upload all contents of the current directory to the S3 bucket
      # - run: aws s3 sync . s3://mybucket-${CIRCLE_WORKFLOW_ID:0:7} --delete
  
workflows:
  my_workflow:
    jobs:
      - create_infrastructure
      #- configure_infrastructure
      - smoke_test




  
